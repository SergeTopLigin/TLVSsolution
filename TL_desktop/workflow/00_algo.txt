1 итерация в сутки в 0:00 UTC

01_matchday.json: вручную заполнить результаты вчерашних игр

02_fix_results.py: запись результатов игр из matchday.json в games.json

03_TL_standings.py: расчет standings по games.json

до 01.08.25: 04_uefa_standings.py: uefa ranking в течение 1-го года

05_standings.py: объединение TL_standings и uefa_standings

06_associations.py

cache/club_sets:
    playoff sets - по окончании группового турнира
    group sets, UefaClubSet - по окончании квалификации

07_nat_tournaments.json: 
для ассоциаций с квотой > 0
    актуализировать инфу по нац кубкам:
        удалить неиспользуемые кубки (>150 дней после финала)
        в текущей стадии дб зафиксированы все клубы, входящие в TL standings на текущий момент
        на след день после окончания последнего матча текущей стадии: 
            перевести ее в предыдущую
            оформить следующую текущую стадию (при наличии хотя бы одного ее участника в TL standings), добавить участников
    в нац лигах дб всегда club set, соотвествующий текущей высшей стадии лиги (регулярный сезон, доп группы)

08_tournaments.py

09_tourns_quota.py: корректировка квоты в 10_participants.json

10_participants.json:
актуализировать участников от турниров, их id и их места в турнирах

11_participants.py: формирование txt и participants_nat.json

01_matchday.json: вручную найти сегодняшние игры между участниками и заполнить
копируя клубы из cache/teams_list.json
заполняя местное время
NATpos не влияет на квоту, заполняется только для отображения на странице games - брать из таблицы без расчетов

12_exp_games.py: 
отправить сегодняшние игры из 1_matchday.json в games.json с "game_status": "expected"
формирование games.txt

13_standings_finish.py

final_standings.json заполнить final_standings[club]['club_NATpos'] вручную

14_standings_str.py

отправить итерацию на github